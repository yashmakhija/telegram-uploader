// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  telegramId String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String
  username   String?
  isBot      Boolean  @default(false)
  isAdmin    Boolean  @default(false)
  canUpload  Boolean  @default(false)  // Permission to upload files
  files      UploadFile[]
  downloads  Download[]
}

model UploadFile {
  id            String   @id @default(uuid())
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  telegramFileId String  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  telegramUrl   String   
  publicUrl     String?  
  fileName      String   
  fileType      String   
  fileSize      Int      
  channelId     String?  
  downloads     Download[]
}

model Download {
  id         String     @id @default(uuid())
  fileId     String
  file       UploadFile @relation(fields: [fileId], references: [id])
  userId     String?
  user       User?      @relation(fields: [userId], references: [id])
  createdAt  DateTime   @default(now())
  ip         String?    // For anonymous downloads
  userAgent  String?
  referer    String?
}